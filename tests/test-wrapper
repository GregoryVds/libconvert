#!/bin/bash

set -e

if [ "$EUID" -ne 0 ]; then
    echo "Please run as root"
    exit 1
fi

CONVERT_SCRIPT="$1"

export TEST_CONVERT_LOG=convert.log
export TEST_OUTPUT_LOG=output.log
export TEST_CONVERT_MOCK_LOG=convert_mock.log
export TEST_VALIDATE_LOG=validate.log

SCAPY_PID=

RETURN_CODE=1

cleanup() {
    echo "Error code: ${RETURN_CODE}"
    # make sure that this function execute until the end
    # if not set any error will exit the script.
    set +e

    # remove firewall rule
    iptables -D INPUT -i lo -p tcp --dport 1234 -j DROP

    # kill scapy server if still runing
    [ -n "${SCAPY_PID}" ] && kill "${SCAPY_PID}" 2> /dev/null

    # iff no failure, remove temporary files:
    if [ "${RETURN_CODE}" == "0" ]; then
        rm -rf ${TEST_CONVERT_LOG} ${TEST_OUTPUT_LOG} ${TEST_CONVERT_MOCK_LOG}
    fi

    # return the same error code as produced by the script
    exit ${RETURN_CODE}
}

# register cleanup() when the script exit
trap cleanup EXIT

# prevent the stack to send RST for packets handled by Scapy.
iptables -I INPUT -i lo -p tcp --dport 1234 -j DROP

# make sure that TFO cache is disabled :)
ip tcp_metrics flush

# run the scapy server
PYTHONPATH="${PYTHONPATH}:${TOP_SOURCE_DIR}/scapy" "${SOURCE_DIR}/${CONVERT_SCRIPT}" server > "${TEST_CONVERT_MOCK_LOG}" 2>&1 &
SCAPY_PID=$!

sleep 1

CONVERT_LOG=${TEST_CONVERT_LOG} CONVERT_ADDR=127.0.0.1 LD_PRELOAD="../libconvert.so" curl -4 http://www.tessares.net/ -s -S -o - > ${TEST_OUTPUT_LOG} 2>&1 || true

ret=$(PYTHONPATH="${PYTHONPATH}:${TOP_SOURCE_DIR}/scapy" "${SOURCE_DIR}/${CONVERT_SCRIPT}" validate 2>&1 | tee ${TEST_VALIDATE_LOG})
[ "${ret}" == "" ] && RETURN_CODE=0

sleep 1
